# Nombre de la aplicación para el API Gateway
spring.application.name=ApiGatewayService

# Puerto en el que correrá el API Gateway (elige uno diferente a los otros servicios)
server.port=8080

# Configuración del cliente Eureka para el Gateway
# Habilita el registro en Eureka
eureka.client.register-with-eureka=true
# Habilita la obtención del registro de servicios desde Eureka
eureka.client.fetch-registry=true
# URL del servidor Eureka
eureka.client.service-url.defaultZone=http://localhost:8761/eureka

# Configuración de rutas del Gateway
spring.cloud.gateway.routes[0].id=user-service-route
# URI de destino: usa 'lb://' seguido del nombre de la aplicación registrada en Eureka (UserService)
# 'lb' indica que se usará el balanceo de carga proporcionado por Eureka/Spring Cloud
spring.cloud.gateway.routes[0].uri=lb://UserService
# Predicado: Coincide con las solicitudes cuya ruta comience con /users/
spring.cloud.gateway.routes[0].predicates[0]=Path=/users/**
# (Opcional) Filtro: Elimina el primer segmento de la ruta (/users) antes de reenviar la solicitud
# Ejemplo: /users/1 -> /1
# spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# Puedes añadir más rutas para otros servicios aquí, incrementando el índice [0], [1], etc.
# spring.cloud.gateway.routes[1].id=otro-servicio-route
# spring.cloud.gateway.routes[1].uri=lb://OtroServicio
# spring.cloud.gateway.routes[1].predicates[0]=Path=/otro/**